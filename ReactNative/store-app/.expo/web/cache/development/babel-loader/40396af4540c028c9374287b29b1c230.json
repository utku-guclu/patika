{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport conditional from \"../utils/conditional\";\nvar add = Animated.add,\n  multiply = Animated.multiply;\nexport function forHorizontalIOS(_ref) {\n  var current = _ref.current,\n    next = _ref.next,\n    inverted = _ref.inverted,\n    screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nexport function forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n    inverted = _ref2.inverted,\n    screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n    current = _ref3.current,\n    next = _ref3.next,\n    inverted = _ref3.inverted,\n    screen = _ref3.layouts.screen,\n    insets = _ref3.insets;\n  var hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTV && insets.top > 20;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var isFirst = index === 0;\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n    inverted = _ref4.inverted,\n    screen = _ref4.layouts.screen,\n    closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nexport function forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n    next = _ref5.next,\n    inverted = _ref5.inverted,\n    screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n    next = _ref6.next,\n    closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nexport function forBottomSheetAndroid(_ref7) {\n  var current = _ref7.current,\n    inverted = _ref7.inverted,\n    screen = _ref7.layouts.screen,\n    closing = _ref7.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nexport function forFadeFromCenter(_ref8) {\n  var progress = _ref8.current.progress;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"sources":["CardStyleInterpolators.tsx"],"names":["conditional","add","multiply","Animated","forHorizontalIOS","current","next","inverted","layouts","screen","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","hasNotchIos","Platform","OS","isPad","isTV","top","isLandscape","topOffset","statusBarHeight","aspectRatio","isFirst","scale","borderRadius","overflow","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forBottomSheetAndroid","forFadeFromCenter","forNoAnimation"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { Animated, Platform } from 'react-native';\nimport conditional from '../utils/conditional';\nconst {\n  add,\n  multiply\n} = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS(_ref) {\n  let {\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref;\n  const translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [\n      // Translation for the animation of the current card\n      {\n        translateX: translateFocused\n      },\n      // Translation for the animation of the card on top of this\n      {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity\n    }\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS(_ref2) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref2;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS(_ref3) {\n  let {\n    index,\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    },\n    insets\n  } = _ref3;\n  const hasNotchIos = Platform.OS === 'ios' && !Platform.isPad && !Platform.isTV && insets.top > 20;\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const isFirst = index === 0;\n  const translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, isFirst ? 0 : topOffset, (isFirst ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  const scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  const borderRadius = isLandscape ? 0 : isFirst ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, hasNotchIos ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      // We don't need these for the animation\n      // But different border radius for corners improves animation perf\n      borderBottomLeftRadius: hasNotchIos ? borderRadius : 0,\n      borderBottomRightRadius: hasNotchIos ? borderRadius : 0,\n      marginTop: isFirst ? 0 : statusBarHeight,\n      marginBottom: isFirst ? 0 : topOffset,\n      transform: [{\n        translateY\n      }, {\n        scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid(_ref4) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    },\n    closing\n  } = _ref4;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1],\n    extrapolate: 'clamp'\n  }));\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid(_ref5) {\n  let {\n    current,\n    next,\n    inverted,\n    layouts: {\n      screen\n    }\n  } = _ref5;\n  const containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Standard Android-style zoom for Android 10.\n */\nexport function forScaleFromCenterAndroid(_ref6) {\n  let {\n    current,\n    next,\n    closing\n  } = _ref6;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  const scale = conditional(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.925, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.075]\n  }));\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        scale\n      }]\n    }\n  };\n}\n\n/**\n * Standard bottom sheet slide in from the bottom for Android.\n */\nexport function forBottomSheetAndroid(_ref7) {\n  let {\n    current,\n    inverted,\n    layouts: {\n      screen\n    },\n    closing\n  } = _ref7;\n  const translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.8, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  const opacity = conditional(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }));\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\n\n/**\n * Simple fade animation for dialogs\n */\nexport function forFadeFromCenter(_ref8) {\n  let {\n    current: {\n      progress\n    }\n  } = _ref8;\n  return {\n    cardStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.5, 0.9, 1],\n        outputRange: [0, 0.25, 0.7, 1]\n      })\n    },\n    overlayStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, 0.5],\n        extrapolate: 'clamp'\n      })\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}\n//# sourceMappingURL=CardStyleInterpolators.js.map"]},"metadata":{},"sourceType":"module"}