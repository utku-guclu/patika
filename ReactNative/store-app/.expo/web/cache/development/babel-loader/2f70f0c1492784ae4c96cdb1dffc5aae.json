{"ast":null,"code":"import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Products from \"./pages/Products\";\nimport Detail from \"./pages/Detail\";\nimport Login from \"./pages/Login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"./components/Loading\";\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Router = function Router() {\n  var userSession = useSelector(function (s) {\n    return s.user;\n  });\n  var isAuthLoading = useSelector(function (s) {\n    return s.isAuthLoading;\n  });\n  var dispatch = useDispatch();\n  return _jsx(NavigationContainer, {\n    children: isAuthLoading ? _jsx(Loading, {}) : !userSession ? _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      })\n    }) : _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"ProductsPage\",\n        component: Products,\n        options: {\n          title: \"Shoppy\",\n          headerStyle: {\n            backgroundColor: \"#64b5f6\"\n          },\n          headerTitleStyle: {\n            color: \"white\"\n          },\n          headerRight: function headerRight() {\n            return _jsx(Icon, {\n              name: \"logout\",\n              size: 30,\n              color: \"white\",\n              onPress: function onPress() {\n                return dispatch({\n                  type: \"REMOVE_USER\"\n                });\n              }\n            });\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"DetailPage\",\n        component: Detail,\n        options: {\n          title: \"Detail\",\n          headerStyle: {\n            backgroundColor: \"#64b5f6\"\n          },\n          headerTitleStyle: {\n            color: \"white\"\n          },\n          headerTintColor: \"white\"\n        }\n      })]\n    })\n  });\n};\nexport default Router;","map":{"version":3,"names":["NavigationContainer","createStackNavigator","Products","Detail","Login","useDispatch","useSelector","Loading","Icon","Stack","Router","userSession","s","user","isAuthLoading","dispatch","headerShown","title","headerStyle","backgroundColor","headerTitleStyle","color","headerRight","type","headerTintColor"],"sources":["/home/utku/Desktop/patika/ReactNative/kodwork/src/Router.js"],"sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport Products from \"./pages/Products\";\nimport Detail from \"./pages/Detail\";\nimport Login from \"./pages/Login\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"./components/Loading\";\n\nimport Icon from \"react-native-vector-icons/MaterialCommunityIcons\";\n\nconst Stack = createStackNavigator();\n\n// Router\nconst Router = () => {\n  const userSession = useSelector((s) => s.user);\n  const isAuthLoading = useSelector((s) => s.isAuthLoading);\n  const dispatch = useDispatch();\n\n  return (\n    <NavigationContainer>\n      {isAuthLoading ? (\n        <Loading />\n      ) : !userSession ? (\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Login\"\n            component={Login}\n            options={{\n              headerShown: false,\n            }}\n          />\n        </Stack.Navigator>\n      ) : (\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"ProductsPage\"\n            component={Products}\n            options={{\n              title: \"Shoppy\",\n              headerStyle: { backgroundColor: \"#64b5f6\" },\n              headerTitleStyle: { color: \"white\" },\n              headerRight: () => (\n                <Icon\n                  name=\"logout\"\n                  size={30}\n                  color=\"white\"\n                  onPress={() => dispatch({ type: \"REMOVE_USER\" })}\n                />\n              ),\n            }}\n          />\n          <Stack.Screen\n            name=\"DetailPage\"\n            component={Detail}\n            options={{\n              title: \"Detail\",\n              headerStyle: { backgroundColor: \"#64b5f6\" },\n              headerTitleStyle: { color: \"white\" },\n              headerTintColor: \"white\",\n            }}\n          />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n};\n\nexport default Router;\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,QAAQ;AACf,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,OAAO;AAEd,OAAOC,IAAI;AAAyD;AAAA;AAEpE,IAAMC,KAAK,GAAGR,oBAAoB,EAAE;AAGpC,IAAMS,MAAM,GAAG,SAATA,MAAM,GAAS;EACnB,IAAMC,WAAW,GAAGL,WAAW,CAAC,UAACM,CAAC;IAAA,OAAKA,CAAC,CAACC,IAAI;EAAA,EAAC;EAC9C,IAAMC,aAAa,GAAGR,WAAW,CAAC,UAACM,CAAC;IAAA,OAAKA,CAAC,CAACE,aAAa;EAAA,EAAC;EACzD,IAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9B,OACE,KAAC,mBAAmB;IAAA,UACjBS,aAAa,GACZ,KAAC,OAAO,KAAG,GACT,CAACH,WAAW,GACd,KAAC,KAAK,CAAC,SAAS;MAAA,UACd,KAAC,KAAK,CAAC,MAAM;QACX,IAAI,EAAC,OAAO;QACZ,SAAS,EAAEP,KAAM;QACjB,OAAO,EAAE;UACPY,WAAW,EAAE;QACf;MAAE;IACF,EACc,GAElB,MAAC,KAAK,CAAC,SAAS;MAAA,WACd,KAAC,KAAK,CAAC,MAAM;QACX,IAAI,EAAC,cAAc;QACnB,SAAS,EAAEd,QAAS;QACpB,OAAO,EAAE;UACPe,KAAK,EAAE,QAAQ;UACfC,WAAW,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAC;UAC3CC,gBAAgB,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAC;UACpCC,WAAW,EAAE;YAAA,OACX,KAAC,IAAI;cACH,IAAI,EAAC,QAAQ;cACb,IAAI,EAAE,EAAG;cACT,KAAK,EAAC,OAAO;cACb,OAAO,EAAE;gBAAA,OAAMP,QAAQ,CAAC;kBAAEQ,IAAI,EAAE;gBAAc,CAAC,CAAC;cAAA;YAAC,EACjD;UAAA;QAEN;MAAE,EACF,EACF,KAAC,KAAK,CAAC,MAAM;QACX,IAAI,EAAC,YAAY;QACjB,SAAS,EAAEpB,MAAO;QAClB,OAAO,EAAE;UACPc,KAAK,EAAE,QAAQ;UACfC,WAAW,EAAE;YAAEC,eAAe,EAAE;UAAU,CAAC;UAC3CC,gBAAgB,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAC;UACpCG,eAAe,EAAE;QACnB;MAAE,EACF;IAAA;EAEL,EACmB;AAE1B,CAAC;AAED,eAAed,MAAM"},"metadata":{},"sourceType":"module"}