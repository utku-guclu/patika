{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\"],\n  _excluded2 = [\"enabled\", \"active\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Screens != null) {\n    return React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};\nexport var MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  if (Screens != null) {\n    return React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return React.createElement(View, rest);\n};","map":{"version":3,"sources":["Screens.tsx"],"names":["React","Screens","require","e","MaybeScreenContainer","enabled","rest","MaybeScreen","active"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAG9B,IAAIC,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CACV;AAGF,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAG,IAAA,EAM9B;EAN+B,IACnCC,OAAO,GAKR,IAAA,CALCA,OAAO;IACJC,IAAAA,4BAIJ,IAAA;EACC,IAAIL,OAAO,IAAI,IAAI,EAAE;IACnB,OAAO,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,eAAe,EAAA,QAAA,CAAA;MAAC,OAAO,EAAEI;IAAQ,CAAA,EAAKC,IAAI,CAAA,CAAI;EAChE;EAEA,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,EAAKA,IAAI,CAAI;AAC3B,CAAC;AAED,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAG,KAAA,EASrB;EATsB,IAC1BF,OAAO,GAQR,KAAA,CARCA,OAAO;IACPG,MAAM,GAOP,KAAA,CAPCA,MAAM;IACHF,IAAAA,4BAMJ,KAAA;EACC,IAAIL,OAAO,IAAI,IAAI,EAAE;IACnB,OACE,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,MAAM,EAAA,QAAA,CAAA;MAAC,OAAO,EAAEI,OAAQ;MAAC,aAAa,EAAEG;IAAO,CAAA,EAAKF,IAAI,CAAA,CAAI;EAEzE;EAEA,OAAO,KAAA,CAAA,aAAA,CAAC,IAAI,EAAKA,IAAI,CAAI;AAC3B,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { View } from 'react-native';\nlet Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\nexport const MaybeScreenContainer = _ref => {\n  let {\n    enabled,\n    ...rest\n  } = _ref;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.ScreenContainer, _extends({\n      enabled: enabled\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\nexport const MaybeScreen = _ref2 => {\n  let {\n    enabled,\n    active,\n    ...rest\n  } = _ref2;\n  if (Screens != null) {\n    return /*#__PURE__*/React.createElement(Screens.Screen, _extends({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(View, rest);\n};\n//# sourceMappingURL=Screens.js.map"]},"metadata":{},"sourceType":"module"}